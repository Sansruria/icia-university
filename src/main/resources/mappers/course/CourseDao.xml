<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="kr.ac.icia.dao.course.CourseDao">
	<!-- 수강신청 Start -->
	<!-- 수강신청 페이지 이동 시 필터링 부분 학부 드롭다운 자동 채우기 -->
	<select id="getAllfaculty" resultType="FilteringDto">
		SELECT faculty_id,
		faculty_name
		FROM faculty
	</select>

	<!-- 선택한 학부(faculty)에 따라서 학과(department) 정보를 가져오는 쿼리 -->
	<select id="filtering" resultType="FilteringDto">
		SELECT department_id,
		department_name
		FROM department
		WHERE faculty_id = #{facultyId}
	</select>

	<!-- 필터링된 수강신청(수강신청 테이블이 아닌 과목 테이블)할 리스트 가져오는 쿼리 -->
	<!-- subject(과목)테이블 / pf(교수의)테이블의 컬럼들의 데이터가 필요하기 떄문에 JOIN해서 쿼리 작성 -->
	<select id="filteringSearch"
		resultType="FilterringSearchListDto">
		SELECT
		s.COURSE_ID,
		s.GRADE,
		s.SEMESTER,
		s.COURSE_DIVISION,
		s.CREDIT,
		s.COURSE_NAME,
		s.COURSE_TIME,
		pf.PF_NAME
		FROM
		SUBJECT s
		JOIN DEPARTMENT d
		ON s.DEPARTMENT_ID = d.DEPARTMENT_ID
		JOIN FACULTY f ON d.FACULTY_ID =
		f.FACULTY_ID
		JOIN PF pf ON s.PF_ID = pf.PF_ID
		<!-- 파라미터를 ?로 대체해서 사용 -->
		WHERE
		f.FACULTY_ID = #{facultyId} AND d.DEPARTMENT_ID = #{departmentId}
		ORDER BY
		s.COURSE_ID
	</select>

	<!-- 등록된 학생 수를 검색하는 쿼리 -->
	<select id="getStudentCount" parameterType="string"
		resultType="int">
		SELECT COUNT(*) FROM COURSE_REQUEST WHERE
		COURSE_ID=#{courseId}
	</select>

	<!-- 마지막으로 사용된 시퀀스 번호를 가져옵니다. -->
	<!-- 수강신청 테이블에서 (REQ_COURSE_ID) PK컬럼에 사용하려고 만든 course_request_seq 사용 -->
	<select id="getLastSequenceNumber" resultType="int">
		SELECT
		MAX(CAST(SUBSTR(REQ_COURSE_ID, 3) AS INT)) FROM COURSE_REQUEST
	</select>

	<!-- 특정 강의의 최대 학생 수를 가져옵니다. -->
	<select id="getMaxStudentLimitForCourse" parameterType="string"
		resultType="int">
		SELECT LIMIT_MAX_COUNT FROM SUBJECT WHERE COURSE_ID =
		#{courseId}
	</select>

	<!-- 이전에 수강신청한 과목을 조회하는 쿼리 -->
	<select id="getPreviousCourses" resultType="CourseRegisterDto">
		SELECT *
		FROM
		COURSE_REQUEST
		WHERE st_id = #{stId}
	</select>

	<!-- 강의를 신청하는 쿼리 -->
	<insert id="finalApply" parameterType="CourseRegisterDto">
		INSERT INTO COURSE_REQUEST
		(
		REQ_COURSE_ID, COURSE_ID, ST_ID,
		REQ_GRADE, REQ_SEMESTER,
		REQ_COURSE_DIVISION,
		REQ_CREDIT, REQ_COURSE_NAME,
		REQ_PF_NAME,
		REQ_COURSE_TIME, REQ_ST_COUNT
		)
		VALUES
		(
		#{reg_course_id}, #{course_id},
		#{req_st_id},
		#{grade}, #{semester},
		#{course_division},
		#{credit},
		#{course_name},
		#{pf_name},
		#{course_time}, #{req_st_count}
		)
	</insert>

	<!-- 수강신청 End -->
</mapper>